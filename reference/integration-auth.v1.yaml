openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:8080
paths:
  /authentication/getOtp:
    post:
      tags:
        - Authentication management
      summary: Get sms OTP operation
      operationId: getSmsOtp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSmsOtpRestRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSmsOtpResponse'
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionObject'
        "404":
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionObject'
        "403":
          description: IMSI not verified, user is disabled
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionObject'
        "422":
          description: Incorrect request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationExceptionObject'
  /authentication/sms-otp:
    post:
      tags:
        - Authentication management
      summary: Get sms OTP operation
      operationId: getSmsOtp_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSmsOtpRestRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSmsOtpResponse'
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionObject'
        "404":
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionObject'
        "403":
          description: IMSI not verified, user is disabled
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionObject'
        "422":
          description: Incorrect request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationExceptionObject'
  /devices:
    post:
      tags:
        - Device token management
      summary: Add device token
      description: Create and assign device to user with specified UCN
      operationId: addDeviceToken
      parameters:
        - name: X-UNC
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddDeviceTokenRequestBody'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceToken'
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionObject'
        "404":
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionObject'
  /devices/{deviceTokenId}:
    get:
      tags:
        - Device token management
      summary: Get device token info
      description: Get device token info by deviceTokenId
      operationId: getDeviceToken
      parameters:
        - name: deviceTokenId
          in: path
          required: true
          schema:
            type: string
      responses:
        "404":
          description: Device token not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionObject'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceToken'
        "400":
          description: Error has been occurred in Authentication Service request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionObject'
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionObject'
        "403":
          description: Device token is not active
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionObject'
  /user:
    get:
      tags:
        - User management
      summary: Get user info
      description: Returns user sensitive security info
      operationId: findUser
      parameters:
        - name: ucn
          in: query
          required: true
          schema:
            type: string
        - name: domain
          in: query
          required: false
          schema:
            type: string
            default: master
      responses:
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionObject'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfoDto'
        "404":
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionObject'
components:
  schemas:
    GetSmsOtpRestRequest:
      required:
        - domain
        - id
      type: object
      properties:
        id:
          type: string
        domain:
          type: string
    GetSmsOtpResponse:
      type: object
      properties:
        transactionId:
          type: string
    ExceptionObject:
      type: object
      properties:
        type:
          type: string
          enum:
            - device_token_not_active
            - user_locked
            - user_locked
            - user_locked
            - device_not_found
            - user_not_found
            - imsi_not_verified
            - generic_business_logic
            - generic_error
        message:
          type: string
    ErrorField:
      type: object
      properties:
        field:
          type: string
        message:
          type: string
    ValidationExceptionObject:
      type: object
      properties:
        type:
          type: string
          enum:
            - device_token_not_active
            - user_locked
            - user_locked
            - user_locked
            - device_not_found
            - user_not_found
            - imsi_not_verified
            - generic_business_logic
            - generic_error
        message:
          type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorField'
    AddDeviceTokenRequestBody:
      type: object
      properties:
        clientName:
          type: string
        uniqueDeviceId:
          type: string
        epsKeyPairVersion:
          type: string
        encryptedSessionKey:
          type: string
        maaVersion:
          type: string
        deviceName:
          type: string
    DeviceToken:
      type: object
      properties:
        domain:
          type: string
        challenge:
          type: string
        deviceName:
          type: string
        ucn:
          type: string
        deviceTokenID:
          type: string
        regDate:
          type: string
          format: date-time
    UserInfoDto:
      type: object
      properties:
        ucn:
          type: string
        alias:
          type: string
        domain:
          type: string
        passwordExpired:
          type: boolean
        passwordMustChange:
          type: boolean
        passwordExpirationTime:
          type: string
          format: date-time
        authenticationProvider:
          type: string
        lock:
          $ref: '#/components/schemas/UserLock'
        codeWord:
          type: string
        smsAuthentication:
          type: boolean
        remotePasswordRestore:
          type: boolean
        homePhone:
          type: string
        mobilePhone:
          type: string
        auxMobilePhone:
          type: string
        email:
          type: string
        linkedUcn:
          type: string
        linkedDomain:
          type: string
        imsiStatus:
          type: string
        discredited:
          type: boolean
        discreditedTillTime:
          type: string
          format: date-time
        discreditedCodes:
          type: array
          items:
            type: integer
            format: int32
        lastPasswordRestoreDate:
          type: string
          format: date-time
        lastPasswordRestoreChannel:
          type: string
    UserLock:
      type: object
      properties:
        type:
          type: string
          enum:
            - NONE
            - TEMPORARY
            - PERMANENT
        lockTime:
          type: string
          format: date-time
        reasonCode:
          type: string
        reasonComment:
          type: string